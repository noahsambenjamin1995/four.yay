from numpy import*
from matplotlib import*
from pylab import*
from scipy import*
from sympy import*
from sympy.abc import x
import plotly.graph_objects as go
import numpy as np

f = input("Enter function:")
r = float(input("Enter range (-r, r):"))
n = float(input("How many terms?"))
s = fourier_series(f, (x, -r, r))
s1 = s.truncate(n=n)
s2 = s.truncate(n=1)
s3 = s.truncate(n=5)
p = plot(f, s1, s2, s3, (x, -r, r), show = False, legend = True)
p[0].line_color = (0,0,0)
p[0].label = 'f(x)'
p[1].line_color = (0.3, 0.3, 0.3)
p[1].label = 'n=' + str(int(n))
p[2].line_color = (0.5, 0.5, 0.5)
p[2].label = 'n=1'
p[3].line_color = (0.7, 0.7, 0.7)
p[3].label = 'n=5'


# print(s1, s2, s3)



p.show()









# # Create figure
# fig = go.Figure()
#
# # Add traces, one for each slider step
# for step in np.arange(0, 5, 0.1):
#     fig.add_trace(
#         go.Scatter(
#             visible=False,
#             line=dict(color="#00CED1", width=6),
#             name="ùúà = " + str(step),
#             x=np.arange(0, 10, 0.01),
#             y=np.sin(step * np.arange(0, 10, 0.01))))
#
# # Make 10th trace visible
# fig.data[10].visible = True
#
# # Create and add slider
# steps = []
# for i in range(len(fig.data)):
#     step = dict(
#         method="update",
#         args=[{"visible": [False] * len(fig.data)},
#               {"title": "Slider switched to step: " + str(i)}],  # layout attribute
#     )
#     step["args"][0]["visible"][i] = True  # Toggle i'th trace to "visible"
#     steps.append(step)
#
# sliders = [dict(
#     active=10,
#     currentvalue={"prefix": "Frequency: "},
#     pad={"t": 50},
#     steps=steps
# )]
#
# fig.update_layout(
#     sliders=sliders
# )
#
# fig.show()